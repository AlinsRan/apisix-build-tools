# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  release_version:
    type: string
    default: apisix-base/1.19.9.1.6

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-publish-debian-arm64-package:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    environment:
      - VAR_DEB_WORKBENCH_DIR: /tmp/output
      - VAR_OS: debian
      - VAR_CODENAME: bullseye
      - VAR_OS_RELEASE: bullseye-slim

    steps:
      - checkout
      - run:
          name: Init basic publish env
          command: |
            mkdir -p "${VAR_DEB_WORKBENCH_DIR}"
            sudo apt-get update

      - when:
          condition:
            # enclose a pattern in ^ and $ to avoid accidental partial matches
            # https://circleci.com/docs/2.0/configuration-reference#logic-statements
            #matches: { pattern: "^apisix/(.*)\\d+$", value: << pipeline.git.tag >> }
            matches: { pattern: "^apisix/(.*)\\d+$", value: << pipeline.parameters.release_version >> }
          steps:
            - run:
                name: build apisix deb package
                command: |
                  CIRCLE_TAG="<< pipeline.parameters.release_version >>"
                  APISIX_TAG_VERSION=$(echo ${CIRCLE_TAG##*/})
                  echo "apisix version: $APISIX_TAG_VERSION"
                  make package type=deb app=apisix openresty=apisix-base checkout=${APISIX_TAG_VERSION} version=${APISIX_TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE}
                  mv ./output/apisix_${APISIX_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb ${VAR_DEB_WORKBENCH_DIR}

            - store_artifacts:
                name: "apisix_${APISIX_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb"
                path: "${VAR_DEB_WORKBENCH_DIR}/apisix_${APISIX_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb"

      - when:
          condition:
            matches: { pattern: "^apisix-base/(.*)\\d+$", value: << pipeline.parameters.release_version >> }
          steps:
            - run:
                name: build apisix-base deb package
                command: |
                  CIRCLE_TAG="<< pipeline.parameters.release_version >>"
                  APISIX_BASE_TAG_VERSION=$(echo ${CIRCLE_TAG##*/})
                  echo "apisix-base version: $APISIX_BASE_TAG_VERSION"
                  make package type=deb app=apisix-base checkout=${APISIX_BASE_TAG_VERSION} version=${APISIX_BASE_TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE}
                  mv ./output/apisix-base_${APISIX_BASE_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb ${VAR_DEB_WORKBENCH_DIR}

            - store_artifacts:
                name: "apisix-base_${APISIX_BASE_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb"
                path: "${VAR_DEB_WORKBENCH_DIR}/apisix-base_${APISIX_BASE_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_arm64.deb"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-publish-debian-package:
    jobs:
      - build-and-publish-debian-arm64-package:
          filters:
            tags:
              only: /^apisix.*/
