name: Build and upload debian Package

on:
  push

jobs:
  publish_apisix:
    name: Build and Publish deb Package
    runs-on: ubuntu-18.04
    timeout-minutes: 60
    env:
      VAR_DEB_WORKBENCH_DIR: /tmp/output
      VAR_OS: debian
      VAR_CODENAME: bullseye
      VAR_OS_RELEASE: bullseye-slim

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.5
        with:
          submodules: recursive

      - name: Init basic publish env
        run: |
          sudo apt-get update
          mkdir -p "${VAR_DEB_WORKBENCH_DIR}"

      - name: Extract release name
        id: release_env
        shell: bash
        run: |
          title="${{ github.event.head_commit.message }}"
          re="^feat: release (apisix|apisix-base)/(\S+)$"
          if [[ $title =~ $re ]]; then
              echo "##[set-output name=type;]${BASH_REMATCH[1]}"
              echo "##[set-output name=version;]${BASH_REMATCH[2]}"
          else
              echo "commit format is not correct"
              exit 1
          fi

      - name: Build apisix deb Package
        if: ${{ endsWith(steps.release_env.outputs.type, 'apisix') }}
        env:
          APISIX_TAG_VERSION: ${{ steps.release_env.outputs.version }}
        run: |
          # build apisix
          make package type=deb app=apisix openresty=apisix-base checkout=${APISIX_TAG_VERSION} version=${APISIX_TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE}
          mv ./output/apisix_${APISIX_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_amd64.deb ${VAR_DEB_WORKBENCH_DIR}

      - name: Build apisix-base deb Package
        if: ${{ endsWith(steps.release_env.outputs.type, 'apisix-base') }}
        env:
          APISIX_BASE_TAG_VERSION: ${{ steps.release_env.outputs.version }}
        run: |
          # build apisix-base
          echo ${{ steps.release_env.outputs.type }}
          echo ${{ steps.release_env.outputs.version }}
          make package type=deb app=apisix-base checkout=${APISIX_BASE_TAG_VERSION} version=${APISIX_BASE_TAG_VERSION} image_base=${VAR_OS} image_tag=${VAR_OS_RELEASE}
          mv ./output/apisix-base_${APISIX_BASE_TAG_VERSION}-0~${VAR_OS}${VAR_OS_RELEASE}_amd64.deb ${VAR_DEB_WORKBENCH_DIR}

      - name: Upload apisix Artifact
        if: ${{ endsWith(steps.release_env.outputs.type, 'apisix') }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "apisix_${{ steps.release_env.outputs.version }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_amd64.deb"
          path: "${{ env.VAR_DEB_WORKBENCH_DIR }}/apisix_${{ steps.release_env.outputs.version }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_amd64.deb"

      - name: Upload apisix-base Artifact
        if: ${{ endsWith(steps.release_env.outputs.type, 'apisix-base') }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "apisix-base_${{ steps.release_env.outputs.version }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_amd64.deb"
          path: "${{ env.VAR_DEB_WORKBENCH_DIR }}/apisix-base_${{ steps.release_env.outputs.version }}-0~${{ env.VAR_OS }}${{ env.VAR_OS_RELEASE }}_amd64.deb"

